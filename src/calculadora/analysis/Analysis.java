/* This file was generated by SableCC (http://www.sablecc.org/). */

package calculadora.analysis;

import calculadora.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAProgramaPrograma(AProgramaPrograma node);
    void caseARelacionamentosFamilia(ARelacionamentosFamilia node);
    void caseARelacionamentoRelacionamento(ARelacionamentoRelacionamento node);
    void caseAFilhaFilha(AFilhaFilha node);
    void caseADefClasseDefClasse(ADefClasseDefClasse node);
    void caseAIdentificadorIdentifica(AIdentificadorIdentifica node);
    void caseAInitInicializar(AInitInicializar node);
    void caseADeclaraObjDec(ADeclaraObjDec node);
    void caseADeclaraVariavelDec(ADeclaraVariavelDec node);
    void caseADeclaraConstanteDec(ADeclaraConstanteDec node);
    void caseADecProcedimentoDeclara(ADecProcedimentoDeclara node);
    void caseADecFuncaoDeclara(ADecFuncaoDeclara node);
    void caseAParametroParametro(AParametroParametro node);
    void caseATipoClasseTipo(ATipoClasseTipo node);
    void caseATipoPrimtivoTipo(ATipoPrimtivoTipo node);
    void caseATipoClasseTipoClasse(ATipoClasseTipoClasse node);
    void caseAIntTipoPrimitivo(AIntTipoPrimitivo node);
    void caseABoolTipoPrimitivo(ABoolTipoPrimitivo node);
    void caseARealTipoPrimitivo(ARealTipoPrimitivo node);
    void caseAInteiroNumero(AInteiroNumero node);
    void caseARealNumero(ARealNumero node);
    void caseAVerdadeiroBooleano(AVerdadeiroBooleano node);
    void caseAFalsoBooleano(AFalsoBooleano node);
    void caseAAtributoAtributo(AAtributoAtributo node);
    void caseASeComando(ASeComando node);
    void caseAComandoComando(AComandoComando node);
    void caseAComandoEnquantoComando(AComandoEnquantoComando node);
    void caseAComandoAtribComando(AComandoAtribComando node);
    void caseAAtributoComando(AAtributoComando node);
    void caseABlocoComando(ABlocoComando node);
    void caseAObjectObject(AObjectObject node);
    void caseASeExp(ASeExp node);
    void caseAEntaoExp(AEntaoExp node);
    void caseASenaoExp(ASenaoExp node);
    void caseAEnquantoExpExp(AEnquantoExpExp node);
    void caseAMaisExp(AMaisExp node);
    void caseAMenosExp(AMenosExp node);
    void caseAMultExp(AMultExp node);
    void caseADivExp(ADivExp node);
    void caseAModExp(AModExp node);
    void caseACompExp(ACompExp node);
    void caseAMenorExp(AMenorExp node);
    void caseABlocoDelimitExp(ABlocoDelimitExp node);
    void caseANumNegativoExp(ANumNegativoExp node);
    void caseAAndExp(AAndExp node);
    void caseAOrExp(AOrExp node);
    void caseAIdAtribExp(AIdAtribExp node);
    void caseAIdAtributoExp(AIdAtributoExp node);
    void caseANumExp(ANumExp node);
    void caseANumBoolExp(ANumBoolExp node);

    void caseTClasse(TClasse node);
    void caseTFilhaDaClasse(TFilhaDaClasse node);
    void caseTComeca(TComeca node);
    void caseTTermina(TTermina node);
    void caseTObjeto(TObjeto node);
    void caseTVariavel(TVariavel node);
    void caseTConstante(TConstante node);
    void caseTInteiro(TInteiro node);
    void caseTBool(TBool node);
    void caseTReal(TReal node);
    void caseTIniciaProcdm(TIniciaProcdm node);
    void caseTProcedimento(TProcedimento node);
    void caseTParEsquerdo(TParEsquerdo node);
    void caseTParDireito(TParDireito node);
    void caseTFuncao(TFuncao node);
    void caseTSe(TSe node);
    void caseTSenao(TSenao node);
    void caseTEntao(TEntao node);
    void caseTEnquanto(TEnquanto node);
    void caseTVerdadeiro(TVerdadeiro node);
    void caseTFalso(TFalso node);
    void caseTE(TE node);
    void caseTOu(TOu node);
    void caseTEComercial(TEComercial node);
    void caseTPontoVirgula(TPontoVirgula node);
    void caseTVirgula(TVirgula node);
    void caseTInicializacao(TInicializacao node);
    void caseTAtribuicao(TAtribuicao node);
    void caseTMenos(TMenos node);
    void caseTMais(TMais node);
    void caseTMult(TMult node);
    void caseTDiv(TDiv node);
    void caseTMod(TMod node);
    void caseTComp(TComp node);
    void caseTMenor(TMenor node);
    void caseTNegacao(TNegacao node);
    void caseTPonto(TPonto node);
    void caseTNumInteiro(TNumInteiro node);
    void caseTNumReal(TNumReal node);
    void caseTIdentificador(TIdentificador node);
    void caseTClIdentificador(TClIdentificador node);
    void caseTComent(TComent node);
    void caseTVazio(TVazio node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
